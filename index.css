:root {
  --light-bg: #f8f9fa; /* Lighter grey for light mode */
  --dark-bg: #202124;  /* Google dark grey */
  --light-surface: #ffffff;
  --dark-surface: #2d2e30; /* Slightly lighter dark surface */
  --light-text-primary: #202124;
  --dark-text-primary: #e8eaed; /* Google dark mode text */
  --light-text-secondary: #5f6368;
  --dark-text-secondary: #bdc1c6; /* Google dark mode secondary text */
  --light-primary: #1a73e8; /* Google Blue */
  --dark-primary: #8ab4f8; /* Lighter Google Blue for dark mode */
  --light-primary-hover: #185abc;
  --dark-primary-hover: #aecbfa;
  --light-border: #dadce0;
  --dark-border: #5f6368;
  --light-error: #d93025;
  --dark-error: #f28b82;
  --light-card-bg: #e8f0fe; /* Light blue background for cards */
  --dark-card-bg: #3c4043; /* Darker grey for cards */
  --light-disabled-bg: #e0e0e0;
  --dark-disabled-bg: #3c4043;
  --light-disabled-text: #a0a0a0;
  --dark-disabled-text: #7f8184;
  --light-shadow-color-1: rgba(60, 64, 67, 0.15);
  --dark-shadow-color-1: rgba(0, 0, 0, 0.3);
  --light-shadow-color-2: rgba(60, 64, 67, 0.1);
  --dark-shadow-color-2: rgba(0, 0, 0, 0.2);
   --light-focus-shadow-color: rgba(26, 115, 232, 0.2);
  --dark-focus-shadow-color: rgba(138, 180, 248, 0.3);
  --light-button-focus-shadow-color: rgba(26, 115, 232, 0.3);
  --dark-button-focus-shadow-color: rgba(138, 180, 248, 0.4);
  --light-button-text: white;
  --dark-button-text: var(--dark-bg); /* Use dark background for text on light blue */
  --page-width: 330px; 
  --page-height: 440px;
  --term-approx-height: 50px; /* Approximate height for term + its reduced margin */
  --cover-image-max-height: calc(var(--page-height) * 0.6); /* Max 60% of page height for cover */
}

body {
  font-family: 'Google Sans', Roboto, Arial, sans-serif;
  margin: 0;
  background-color: light-dark(var(--light-bg), var(--dark-bg));
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
  display: flex;
  justify-content: center;
  align-items: flex-start;
  min-height: 100vh;
  padding: 5px; 
  box-sizing: border-box;
}

.container {
  background-color: light-dark(var(--light-surface), var(--dark-surface));
  padding: 10px 15px; 
  border-radius: 12px;
  box-shadow: 0 1px 3px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1)),
              0 4px 8px light-dark(var(--light-shadow-color-2), var(--dark-shadow-color-2));
  width: 95%;
  max-width: 95vw; 
  margin-top: 5px; 
}

p { 
  margin-bottom: 10px; 
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  line-height: 1.6;
}

.input-section {
  margin-bottom: 10px; 
}

.input-section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 5px; 
  padding-bottom: 2px; 
  border-bottom: 1px solid light-dark(var(--light-border), var(--dark-border));
  flex-wrap: wrap; /* Allow wrapping if space is tight */
}

.header-controls {
  display: flex;
  align-items: center;
  gap: 10px; /* Space between control groups */
  flex-wrap: nowrap; /* Prevent wrapping of individual controls, rely on parent's wrap */
}

.checkbox-container {
  display: flex;
  align-items: center;
  gap: 4px; /* Space between checkbox and its label */
}

.checkbox-container label {
  font-size: 0.9em;
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  cursor: pointer;
}

.checkbox-container input[type="checkbox"] {
  cursor: pointer;
  accent-color: light-dark(var(--light-primary), var(--dark-primary));
}


.input-section.controls-collapsed .input-section-header #topicLabel {
  display: none;
}
.input-section.controls-collapsed .input-section-header {
  justify-content: flex-end; 
  border-bottom: none; 
}


#topicLabel {
  font-size: 1.2em;
  font-weight: 500;
  color: light-dark(var(--light-primary), var(--dark-primary));
  margin-right: auto; /* Push other controls to the right */
}

.toggle-button {
  background-color: transparent;
  color: light-dark(var(--light-primary), var(--dark-primary));
  padding: 6px 10px;
  border: 1px solid light-dark(var(--light-border), var(--dark-border));
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.9em;
  font-weight: 500;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
  display: inline-flex;
  align-items: center;
  box-shadow: none;
  white-space: nowrap; /* Prevent text wrapping within button */
}

.toggle-button:hover:not(:disabled) {
  background-color: light-dark(rgba(0,0,0,0.05), rgba(255,255,255,0.08));
  border-color: light-dark(var(--light-primary), var(--dark-primary));
}

.toggle-button:focus:not(:disabled) {
  outline: none;
  box-shadow: 0 0 0 2px light-dark(var(--light-button-focus-shadow-color), var(--dark-button-focus-shadow-color));
}

.toggle-button:disabled {
  background-color: light-dark(var(--light-disabled-bg), var(--dark-disabled-bg));
  color: light-dark(var(--light-disabled-text), var(--dark-disabled-text));
  border-color: light-dark(var(--light-border), var(--dark-border));
  cursor: not-allowed;
  box-shadow: none;
}
.toggle-button:disabled .toggle-icon,
.toggle-button:disabled .download-icon {
  color: light-dark(var(--light-disabled-text), var(--dark-disabled-text)); /* Ensure icon also greys out */
}


.toggle-icon, .download-icon {
  margin-right: 6px;
  font-size: 0.8em; 
  transition: transform 0.3s ease;
}

.collapsible-controls {
  display: block; 
  overflow: hidden;
  transition: max-height 0.3s ease-out, opacity 0.3s ease-out, margin-top 0.3s ease-out;
  max-height: 500px; 
  opacity: 1;
  margin-top: 8px; /* Give some space when expanded */
}

.collapsible-controls.collapsed {
  max-height: 0;
  opacity: 0;
  pointer-events: none; 
  margin-top: 0; 
}


textarea {
  width: calc(100% - 20px); 
  padding: 10px; 
  border: 1px solid light-dark(var(--light-border), var(--dark-border));
  border-radius: 8px;
  font-size: 16px;
  min-height: 60px; 
  background-color: light-dark(var(--light-bg), var(--dark-card-bg));
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
  resize: vertical;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
  display: block; 
  box-sizing: border-box; 
  margin: 0 auto 10px auto; 
}

textarea:focus {
  outline: none;
  border-color: light-dark(var(--light-primary), var(--dark-primary));
  box-shadow: 0 0 0 2px light-dark(var(--light-focus-shadow-color), var(--dark-focus-shadow-color));
}

textarea:disabled {
  background-color: light-dark(var(--light-disabled-bg), var(--dark-disabled-bg));
  color: light-dark(var(--light-disabled-text), var(--dark-disabled-text));
  cursor: not-allowed;
}


#generateButton {
  background-color: light-dark(var(--light-primary), var(--dark-primary));
  color: light-dark(var(--light-button-text), var(--dark-button-text));
  padding: 10px 20px; 
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  transition: background-color 0.3s ease, box-shadow 0.2s ease;
  box-shadow: 0 1px 2px light-dark(var(--light-shadow-color-2), var(--dark-shadow-color-2));
  display: block; 
  width: fit-content; 
  margin: 0 auto; 
}

#generateButton:hover:not(:disabled) {
  background-color: light-dark(var(--light-primary-hover), var(--dark-primary-hover));
  box-shadow: 0 1px 3px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1));
}

#generateButton:focus {
  outline: none;
  box-shadow: 0 0 0 3px light-dark(var(--light-button-focus-shadow-color), var(--dark-button-focus-shadow-color));
}

#generateButton:disabled {
  background-color: light-dark(var(--light-disabled-bg), var(--dark-disabled-bg));
  color: light-dark(var(--light-disabled-text), var(--dark-disabled-text));
  cursor: not-allowed;
  box-shadow: none;
}


.error-message {
  color: light-dark(var(--light-error), var(--dark-error));
  margin-top: 5px; 
  font-weight: 500;
  min-height: 1.5em; 
  padding-bottom: 2px; 
  text-align: center;
  font-size: 0.9em;
}

.pages-container {
  position: relative;
  width: var(--page-width);
  height: var(--page-height);
  margin: 10px auto; 
  perspective: 1800px;
  transform-style: preserve-3d; 
}

.page-segment {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transition: transform 0.7s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  
  display: flex;
  flex-direction: column; 
  box-sizing: border-box;
  border-radius: 10px;
  border: 1px solid light-dark(var(--light-border), var(--dark-border));
  background-color: light-dark(var(--light-card-bg), var(--dark-card-bg));
  overflow: hidden; 
  word-break: break-word;    
  box-shadow: 0 2px 5px light-dark(var(--light-shadow-color-2), var(--dark-shadow-color-2));
}

.page-segment:focus {
  outline: none;
}

.page-segment--front {
  padding: 15px; 
  transform: rotateY(0deg);
  background-color: light-dark(var(--light-card-bg), var(--dark-card-bg));
  border-color: light-dark(var(--light-primary), var(--dark-primary));
  transform-origin: left center;
  left: calc(0.5 * var(--page-width));
  cursor: pointer;
  justify-content: flex-start; 
  align-items: center; 
}

.page-segment--back {
  padding: 0; 
  transform: rotateY(180deg); 
  transform-origin: right center; 
  left: calc(-0.5 * var(--page-width));
  background-color: light-dark(var(--light-card-bg), var(--dark-card-bg));
  justify-content: center; 
  align-items: center;
  display: flex; 
}

.page-segment--front.is-turned {
  transform: rotateY(-180deg); 
}

.page-segment--back.is-revealed {
  transform: rotateY(0deg); 
  cursor: pointer; 
}

.page-segment--front.current:focus,
.page-segment--front.current:hover {
   box-shadow: 0 0 0 2px light-dark(var(--light-primary), var(--dark-primary)),
              0 6px 15px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1));
}

.page-segment--back.is-revealed:focus,
.page-segment--back.is-revealed:hover {
   box-shadow: 0 0 0 2px light-dark(var(--light-primary), var(--dark-primary)), 
              0 4px 10px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1)); 
}

.cover-image {
  width: calc(100% - 10px); 
  max-height: var(--cover-image-max-height);
  object-fit: cover; 
  border-radius: 6px;
  margin-bottom: 10px; 
  display: block; 
  border: 1px solid light-dark(var(--light-border), var(--dark-border)); 
}

.back-cover-image {
  width: 100%;
  height: 100%;
  object-fit: cover; 
  display: block;
  border-radius: inherit; 
}


.term {
  font-size: 1.4em;
  font-weight: 500;
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
  margin-bottom: 10px; 
  text-align: center;
  width: 100%; 
  flex-shrink: 0; 
}

.page-segment--front .cover-image + .term {
  margin-top: 0; 
  font-size: 1.6em; 
}


.definition-content-front {
  font-size: 1.1em;
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  line-height: 1.5;
  width: 100%; 
  text-align: left; 
  overflow-y: auto; 
  max-height: calc(var(--page-height) - (2 * 15px) - var(--term-approx-height)); 
  padding-right: 5px; 
  box-sizing: border-box;
  flex-grow: 1; 
  min-height: 0; 
}

.page-segment--front:not(:has(.cover-image)) .definition-content-front {
   max-height: calc(var(--page-height) - (2 * 15px) - var(--term-approx-height)); 
}
.page-segment--front:has(.cover-image) .definition-content-front {
  max-height: calc(var(--page-height) - (2 * 15px) - var(--cover-image-max-height) - var(--term-approx-height) - 10px ); 
}


.definition { 
  font-size: 1.1em;
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  line-height: 1.5;
  width: 100%; 
  text-align: center; 
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%; 
}

.definition-content-front::-webkit-scrollbar {
  width: 8px;
}

.definition-content-front::-webkit-scrollbar-track {
  background: light-dark(var(--light-bg), var(--dark-surface));
  border-radius: 4px;
}

.definition-content-front::-webkit-scrollbar-thumb {
  background: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  border-radius: 4px;
}

.definition-content-front::-webkit-scrollbar-thumb:hover {
  background: light-dark(var(--light-primary), var(--dark-primary));
}